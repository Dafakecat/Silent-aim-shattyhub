-- silentaim.lua

local Players = game:GetService("Players")
local CollectionService = game:GetService("CollectionService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

if _G.silentAimEnabled == nil then
    _G.silentAimEnabled = false
end

if _G.silentAimConnection then
    _G.silentAimConnection:Disconnect()
    _G.silentAimConnection = nil
end

local WeaponController = require(ReplicatedStorage.Client.Game.Controllers.WeaponController)

if _G.overrideFireBullet and _G.originalWeaponController then
    _G.originalWeaponController.FireBullet = _G.overrideFireBullet
    _G.overrideFireBullet = nil
    _G.originalWeaponController = nil
end

local function getClosestEnemy()
    local character = LocalPlayer.Character
    if not character or not character:FindFirstChild("HumanoidRootPart") then return nil end

    local closestPart = nil
    local minDist = math.huge

    for _, enemy in ipairs(CollectionService:GetTagged("Enemy")) do
        local valid = false
        local success, result = pcall(function()
            return require(ReplicatedStorage.Shared.Game.Utils.TypeValidators.validateLivingCharacter)(enemy)
        end)
        if success and result then
            local name = enemy.Name:lower()
            if not name:find("horse") and name ~= "model_riflesoldier" and name ~= "model_turretsoldier" then
                valid = true
            end
        end

        if valid then
            local part = enemy:FindFirstChild("Head") or enemy:FindFirstChild("HumanoidRootPart")
            if part then
                local dist = (character.HumanoidRootPart.Position - part.Position).Magnitude
                if dist < 200 and dist < minDist then
                    closestPart = part
                    minDist = dist
                end
            end
        end
    end
    return closestPart
end

local function getWeaponTool()
    local character = LocalPlayer.Character
    if not character then return nil end
    for _, tool in ipairs(character:GetChildren()) do
        if tool:IsA("Tool") and tool:FindFirstChild("WeaponConfiguration") then
            return tool
        end
    end
    return nil
end

_G.overrideFireBullet = WeaponController.FireBullet
_G.originalWeaponController = WeaponController

WeaponController.FireBullet = function(weapon, ...)
    if _G.silentAimEnabled then
        local target = getClosestEnemy()
        if target then
            local originalCFrame = Camera.CFrame
            Camera.CFrame = CFrame.new(originalCFrame.Position, target.Position)

            local result = _G.overrideFireBullet(weapon, ...)
            Camera.CFrame = originalCFrame
            return result
        end
    end
    return _G.overrideFireBullet(weapon, ...)
end

_G.silentAimConnection = RunService.Heartbeat:Connect(function()
    local tool = getWeaponTool()
    if not tool then return end

    local config = tool:FindFirstChild("WeaponConfiguration")
    if not config then return end

    local reloadTime = config:FindFirstChild("ReloadTime")
    if not reloadTime then return end

    if _G.silentAimEnabled then
        if reloadTime.Value ~= 0.01 then
            _G.originalReloadTime = _G.originalReloadTime or reloadTime.Value
            reloadTime.Value = 0.01
        end
    else
        if _G.originalReloadTime then
            reloadTime.Value = _G.originalReloadTime
            _G.originalReloadTime = nil
        end
    end
end)

print("[SilentAim] Loaded. SilentAimEnabled =", _G.silentAimEnabled)
